use std::io;

fn main() {
    // mesafe<R onda 1) mesafe=0 1a) R1=R2 onda -1 1b) R1!=R2 onda 0   2) 0<mesafe<R onda 2a) |R|<mesafe onda 2   2b) |R|=mesafe onda 1 2c) |R|>mesafe onda 0
    // mesafe=R onda 1
    // mesafe>R onda 0
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    let massiv: Vec<f64> = input
        .split_whitespace()
        .map(|s| s.parse().expect("Invalid input"))
        .collect();

    let x1 = massiv[0];
    let y1 = massiv[1];
    let r1 = massiv[2];
    let x2 = massiv[3];
    let y2 = massiv[4];
    let r2 = massiv[5];

    let mesafe = ((x1 - x2).powi(2) + (y1 - y2).powi(2)).sqrt();
    let cr = r1 + r2;
    let fr = (r1 - r2).abs();

    if mesafe == cr {
        println!("1");
    } else if mesafe > cr {
        println!("0");
    } else if mesafe == 0.0 {
        println!("{}", if fr < f64::EPSILON { "-1" } else { "0" });
    } else if 0.0 < mesafe && mesafe < cr {
        if fr < mesafe {
            println!("2");
        } else if fr == mesafe {
            println!("1");
        } else if fr > mesafe {
            println!("0");
        }
    }
}
